---
# ---
# name: Pytest Testing
# on: [push, pull_request]
# jobs:
#   tests:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       actions: write
#     strategy:
#       matrix:
#         python-version: ['3.11', '3.12', '3.13']
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4
#       - name: Set up Python ${{ matrix.python-version }}
#         uses: actions/setup-python@v5
#         with:
#           python-version: ${{ matrix.python-version }}
#       - name: Cache pip dependencies
#         uses: actions/cache@v4
#         with:
#           path: ~/.cache/pip
#           key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt')
#             }}
#           restore-keys: |
#             ${{ runner.os }}-pip-${{ matrix.python-version }}-
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt
#           pip install -r requirements-dev.txt
#       - name: Run tests with coverage and HTML report
#         run: |
#           export PYTHONPATH=src
#           pytest --cov=src \
#                  --cov-report=xml \
#                  --cov-fail-under=80 \
#                  --html=pytest-report.html
#       - name: Upload HTML Test Report
#         if: ${{ !env.ACT }}
#         uses: actions/upload-artifact@v4
#         with:
#           name: pytest-report-${{ matrix.python-version }}
#           path: pytest-report.html
#       - name: Upload Coverage Report
#         if: ${{ !env.ACT }}
#         uses: actions/upload-artifact@v4
#         with:
#           name: coverage-${{ matrix.python-version }}
#           path: coverage.xml
#       - name: Upload coverage to Codecov
#         uses: codecov/codecov-action@v5
#         with:
#           token: ${{ secrets.CODECOV_TOKEN }}
name: Pytest Testing
on: [push, pull_request]
jobs:
  tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    strategy:
      matrix:
        python-version: ['3.11', '3.12', '3.13']
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt')
            }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
      - name: Run tests with coverage and HTML report (if any tests exist)
        run: |
          export PYTHONPATH=src
          if compgen -G "tests/test_*.py" > /dev/null; then
            echo "✅ Found test files. Running pytest..."
            pytest --cov=src \
                   --cov-report=xml \
                   --cov-fail-under=80 \
                   --html=pytest-report.html
          else
            echo "⚠️ No test files found — skipping pytest."
            touch pytest-report.html coverage.xml
          fi
      - name: Upload HTML Test Report
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report-${{ matrix.python-version }}
          path: pytest-report.html
      - name: Upload Coverage Report
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}
          path: coverage.xml
      - name: Upload coverage to Codecov
        if: ${{ !env.ACT }}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
