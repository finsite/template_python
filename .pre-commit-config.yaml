---
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: check-json
      - id: detect-private-key
      - id: check-added-large-files
        args: [--maxkb=5000]
      - id: debug-statements
      - id: check-merge-conflict
      - id: check-executables-have-shebangs
      - id: end-of-file-fixer
      - id: mixed-line-ending
        args: [--fix=lf]
  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.1
    hooks:
      - id: codespell
        # Updated to valid regex
        exclude: package-lock\.json
        args: [--ignore-words-list, hte]
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
      - id: black
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.11.8
    hooks:
      - id: ruff
        args: [--fix, --extend-select=D, ANN]  # Youâ€™re already replacing docformatter here
      - id: ruff-format
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.19.1
    hooks:
      - id: pyupgrade
        args: [--py311-plus]
  - repo: https://github.com/pre-commit/mirrors-isort
    rev: v5.10.1
    hooks:
      - id: isort

  # Consolidated local hooks for clarity
  - repo: local
    hooks:
      - id: pylint
        name: pylint
        entry: pylint
        language: system
        types: [python]
        require_serial: true
        args:
          - --disable=all
          - --enable=missing-function-docstring,missing-class-docstring
      - id: pyright
        name: pyright type checking
        entry: pyright
        language: node
        types: [python]
        pass_filenames: false

      # ðŸ”§ Consider disabling â€” Ruff and Black already handle formatting/linting
      # - id: docformatter
      #   name: Format docstrings with docformatter
      #   entry: docformatter
      #   language: system
      #   types: [python]
      #   args:
      #     - --in-place
      #     - --recursive
      #     - --wrap-summaries=88
      #     - --wrap-descriptions=88
      #     - --pre-summary-newline
      #   files: \.py$
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.3
    hooks:
      - id: bandit
        args: [-r, src, tests]
        pass_filenames: false
        language: python
  - repo: local
    hooks:
      - id: pip-audit
        name: pip-audit
        entry: pip-audit --requirement requirements.txt --requirement requirements-dev.txt
        language: system
        types: [python]
        pass_filenames: false
      - id: pip-check
        name: Check installed dependencies
        entry: pip check
        language: system
        pass_filenames: false

  # Docker and Shell Scripts
  # - repo: https://github.com/hadolint/hadolint
  #   rev: v2.13.1-beta
  #   hooks:
  #     - id: hadolint
  #       name: Hadolint
  #       entry: hadolint
  #       language: system
  #       files: Dockerfile
  - repo: https://github.com/koalaman/shellcheck-precommit
    rev: v0.10.0
    hooks:
      - id: shellcheck
        entry: shellcheck
        language: system
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        files: \.(json|md|html|css)$  # YAML intentionally excluded due to Helm
        args: [--print-width, '80']
        additional_dependencies: [prettier@latest]
  - repo: https://github.com/lyz-code/yamlfix
    rev: 1.17.0
    hooks:
      - id: yamlfix
        files: \.(yaml|yml)$
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v4.6.2
    hooks:
      - id: commitizen
        name: Commitizen Conventional Commit Linter
        entry: cz check
        language: python
        stages: [commit-msg]
  - repo: local
    hooks:
      - id: commitizen-changelog-check
        name: Commitizen Changelog Dry Run
        entry: cz changelog --dry-run
        language: system
        stages: [pre-push]

  # âœ… Run Tests (uncomment when needed)
  # - repo: local
  #   hooks:
  #     - id: pytest
  #       name: Run tests before commit
  #       entry: pytest tests --maxfail=3 --disable-warnings -q
  #       language: system
  #       pass_filenames: false

  # - repo: local
  #   hooks:
  #     - id: pytest-cov
  #       name: Pytest with Coverage Enforcement
  #       entry: pytest --maxfail=3 --disable-warnings --cov=src --cov-report=term-missing --cov-fail-under=85
  #       language: system
  #       pass_filenames: false
  - repo: https://github.com/fpgmaas/deptry.git
    rev: 0.23.0
    hooks:
      - id: deptry
        args: [--ignore, 'DEP001,DEP002,DEP003']
  - repo: local
    hooks:
      - id: pip-compile-prod
        name: Pip Compile Production Requirements
        language: system
        entry: pip-compile --upgrade --output-file=requirements.txt requirements.in
        files: ^requirements\.in$
      - id: pip-compile-dev
        name: Pip Compile Dev Requirements
        language: system
        entry: pip-compile --upgrade --output-file=requirements-dev.txt requirements-dev.in
        files: ^requirements-dev\.in$
  - repo: local
    hooks:
      - id: git-add-requirements
        name: Git Add Requirements Files
        language: system
        entry: git add --intent-to-add requirements.txt requirements-dev.txt
        files: ^requirements(-dev)?\.in$
        always_run: true
        pass_filenames: false
