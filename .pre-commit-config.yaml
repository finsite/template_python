# repos:
#   # ✅ Basic Code Hygiene (Trailing Whitespace, Newlines, YAML/JSON Checks)
#   - repo: https://github.com/pre-commit/pre-commit-hooks
#     rev: "v5.0.0"
#     hooks:
#       #- id: trailing-whitespace
#       #- id: end-of-file-fixer
#       - id: check-yaml
#       - id: check-json
#       - id: detect-private-key

#   - repo: https://github.com/psf/black
#     # ✅ Autoformatting (Black)
#     rev: "25.1.0"
#     hooks:
#       - id: black

#   - repo: https://github.com/PyCQA/flake8
#     # ✅ Linting (Flake8)
#     rev: "7.1.2"
#     hooks:
#       - id: flake8
#         additional_dependencies: ["flake8-bugbear", "flake8-import-order"]

#   - repo: https://github.com/pre-commit/mirrors-mypy
#     # ✅ Type Checking (Mypy)
#     rev: "v1.15.0"
#     hooks:
#       - id: mypy

#   - repo: https://github.com/asottile/pyupgrade
#     # ✅ Python Syntax Upgrades (PyUpgrade)
#     rev: "v3.19.1"
#     hooks:
#       - id: pyupgrade
#         args: ["--py311-plus"]

#   - repo: https://github.com/pre-commit/mirrors-isort
#     # ✅ Import Sorting (Isort) - Only applies to `.py` files
#     rev: "v5.10.1"
#     hooks:
#       - id: isort
#         args: ["--filter-files"]
#         files: "\\.py$"

#   - repo: https://github.com/PyCQA/bandit
#     # ✅ Security Linter for Python Code (Bandit)
#     rev: "1.8.3"
#     hooks:
#       - id: bandit
#         entry: bandit -r src --exclude "tests/*,docs/*,setup.py"
#         language: python
#         pass_filenames: false

#   - repo: local
#     hooks:
#       - id: safety
#         name: safety
#         entry: safety scan --full-report --file=requirements.txt --key free
#         language: system
#         types: [python]
#         pass_filenames: false

#   - repo: https://github.com/jendrikseipp/vulture
#     # ✅ Dead Code & Unused Imports (Vulture) - Ignores Docs & Tests
#     rev: "v2.14"
#     hooks:
#       - id: vulture
#         args: ["src"]
#         exclude: "docs/.*|tests/.*"

#   - repo: https://github.com/hadolint/hadolint
#     rev: v2.13.1-beta # Use latest stable version
#     hooks:
#       - id: hadolint
#         name: Hadolint
#         entry: hadolint
#         language: system
#         files: Dockerfile

#   - repo: https://github.com/pre-commit/mirrors-prettier
#     rev: "v4.0.0-alpha.8" # Use the latest stable version
#     hooks:
#       - id: prettier
#         args: ["--print-width", "80"]
#         additional_dependencies: ["prettier@latest"]
#   # - repo: https://github.com/google/yamlfmt
#   #   # # ✅ YAML Formatting
#   #   rev: v0.14.0
#   #   hooks:
#   #     - id: yamlfmt
#   #       language: system
#   #   rev: "v1.35.1"
#   #   hooks:
#   #     - id: yamllint
#   #   # ✅ Markdown Linting (Markdownlint) - Uses Windows-Compatible `npx`
#   #   hooks:
#   #     - id: markdownlint
#   #       args: ['--fix']
#   #       name: markdownlint
#   #       entry: npx markdownlint-cli
#   #       language: system
#   #       files: "\\.md$"
#   #       pass_filenames: true
#   #       types: [markdown]
#   # - repo: https://github.com/DavidAnson/markdownlint-cli2
#   #   # - repo: local

#   #   rev: v0.17.2 # Use the latest stable version
#   #   hooks:
#   #     - id: markdownlint-cli2
#   #       args: ["--fix"]
#   - repo: https://github.com/koalaman/shellcheck-precommit
#     # ✅ Shell Script Linter (ShellCheck) - Uses System Binary
#     rev: "v0.10.0"
#     hooks:
#       - id: shellcheck
#         entry: shellcheck # Uses system-installed binary
#         language: system
#   - repo: local
#     # ✅ Python Security Check (Pip-Audit) - Now only scans `requirements.txt`
#     hooks:
#       - id: pip-audit
#         name: pip-audit
#         entry: pip-audit --requirement requirements.txt
#         language: system
#         types: [python]
#         pass_filenames: false
#   - repo: local
#     # ✅ Sphinx Documentation Validation - Windows-Compatible

#     hooks:
#       - id: sphinx-lint
#         name: Sphinx Docs Build
#         entry: cmd /c "if exist src (sphinx-build -W -b html docs/source docs/build)"
#         language: system
#         pass_filenames: false
#         always_run: true

#   - repo: https://github.com/astral-sh/ruff-pre-commit
#     rev: v0.9.8 # Use the latest stable version
#     hooks:
#       - id: ruff
#         args: [--fix]
#         types: [python]

#   - repo: local
#     hooks:
#       - id: pylint
#         name: pylint
#         entry: pylint
#         language: system
#         types: [python]
#         args: [
#             "-rn", # Only display messages
#             "--rcfile=pylintrc", # Link to your config file
#             "--load-plugins=pylint.extensions.docparams", # Load an extension
#           ]
repos:
  # ✅ Basic Code Hygiene
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: "v5.0.0"
    hooks:
      - id: check-yaml
      - id: check-json
      - id: detect-private-key
      - id: check-added-large-files
        args: ["--maxkb=5000"]
      - id: debug-statements
      - id: check-merge-conflict
      - id: check-executables-have-shebangs

  # ✅ Autoformatting (Black)
  - repo: https://github.com/psf/black
    rev: "25.1.0"
    hooks:
      - id: black

  # ✅ Linting & Auto-Fixes (Ruff) - Replaces Flake8, Isort, and Pylint
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.9.9
    hooks:
      - id: ruff
        args: [--fix]
        types: [python]

  # ✅ Type Checking (Mypy)
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: "v1.15.0"
    hooks:
      - id: mypy

  # ✅ Security Linter for Python Code (Bandit) - Now Scans Tests Too
  - repo: https://github.com/PyCQA/bandit
    rev: "1.8.3"
    hooks:
      - id: bandit
        entry: bandit -r src tests
        language: python
        pass_filenames: false

  # ✅ Dependency Security Audit (Pip-Audit)
  - repo: local
    hooks:
      - id: pip-audit
        name: pip-audit
        entry: pip-audit --requirement requirements.txt
        language: system
        types: [python]
        pass_filenames: false

  # ✅ Ensure All Dependencies Are Installed
  - repo: local
    hooks:
      - id: pip-check
        name: Check installed dependencies
        entry: pip check
        language: system
        pass_filenames: false

  # ✅ Python Syntax Upgrades (PyUpgrade)
  - repo: https://github.com/asottile/pyupgrade
    rev: "v3.19.1"
    hooks:
      - id: pyupgrade
        args: ["--py311-plus"]

  # ✅ Dockerfile Linter (Hadolint)
  - repo: https://github.com/hadolint/hadolint
    rev: v2.13.1-beta
    hooks:
      - id: hadolint
        name: Hadolint
        entry: hadolint
        language: system
        files: Dockerfile

  # ✅ Docker Security Scanner (Trivy)
  - repo: local
    hooks:
      - id: trivy
        name: Trivy Docker Security Scan
        entry: trivy image --severity HIGH,CRITICAL .
        language: system
        pass_filenames: false
        always_run: true

  # ✅ Shell Script Linter (ShellCheck)
  - repo: https://github.com/koalaman/shellcheck-precommit
    rev: "v0.10.0"
    hooks:
      - id: shellcheck
        entry: shellcheck
        language: system

  # ✅ Prettier for Markdown, YAML, and JSON Formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: "v4.0.0-alpha.8"
    hooks:
      - id: prettier
        args: ["--print-width", "80"]
        additional_dependencies: ["prettier@latest"]

  # ✅ Sphinx Documentation Validation
  - repo: local
    hooks:
      - id: sphinx-lint
        name: Sphinx Docs Build
        entry: sphinx-build -W -b html docs/source docs/build
        language: system
        pass_filenames: false
        always_run: true

  # ✅ Conventional Commits Linter (Commitizen)
  - repo: https://github.com/commitizen-tools/commitizen
    rev: "v3.12.0"
    hooks:
      - id: commitizen
        name: Commitizen Conventional Commit Linter
        entry: cz check
        language: python # ✅ Uses Python environment
        stages: [commit-msg] # ✅ This is the correct field

  # ✅ Docstring Validation (Darglint)
  - repo: https://github.com/terrencepreilly/darglint
    rev: "v1.8.1"
    hooks:
      - id: darglint
        args: ["--verbosity", "2"]

  # ✅ Run Tests (Pytest)
  - repo: local
    hooks:
      - id: pytest
        name: Run tests before commit
        entry: pytest
        language: system
        pass_filenames: false
