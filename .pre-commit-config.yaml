repos:
  # ✅ Basic Code Hygiene
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: "v5.0.0"
    hooks:
      - id: check-yaml
      - id: check-json
      - id: detect-private-key
      - id: check-added-large-files
        args: ["--maxkb=5000"]
      - id: debug-statements
      - id: check-merge-conflict
      - id: check-executables-have-shebangs
      - id: end-of-file-fixer
      - id: mixed-line-ending
        args: [--fix=lf]

  # ✅ Spelling
  - repo: https://github.com/codespell-project/codespell
    rev: v2.4.1
    hooks:
      - id: codespell
        exclude: package-lock.json
        args: ["--ignore-words-list", "hte"]

  # ✅ Python Code Formatters & Linters
  - repo: https://github.com/psf/black
    rev: "25.1.0"
    hooks:
      - id: black

  # - repo: https://github.com/astral-sh/ruff-pre-commit
  #   rev: v0.11.2
  #   hooks:
  #     - id: ruff
  #       args: [--fix]
  #     - id: ruff-format

  - repo: https://github.com/asottile/pyupgrade
    rev: "v3.19.1"
    hooks:
      - id: pyupgrade
        args: ["--py311-plus"]

  - repo: https://github.com/pre-commit/mirrors-isort
    rev: v5.10.1
    hooks:
      - id: isort

  # - repo: https://github.com/myint/docformatter
  #   rev: v1.7.5
  #   hooks:
  #     - id: docformatter
  #       args: ["--in-place", "--recursive"]

  # ✅ Type Checking & Static Analysis
  # - repo: https://github.com/pre-commit/mirrors-mypy
  #   rev: v1.15.0
  #   hooks:
  #     - id: mypy
  #       args: ["--strict", "src"]

  # ✅ Security
  - repo: https://github.com/PyCQA/bandit
    rev: "1.8.3"
    hooks:
      - id: bandit
        args: ["-r", "src", "tests"]
        pass_filenames: false
        language: python

  # ✅ Dependency Security Audit (Pip-Audit)
  - repo: local
    hooks:
      - id: pip-audit
        name: pip-audit
        entry: pip-audit --requirement requirements.txt --requirement requirements-dev.txt
        language: system
        types: [python]
        pass_filenames: false

  - repo: local
    hooks:
      - id: pip-check
        name: Check installed dependencies
        entry: pip check
        language: system
        pass_filenames: false

  # ✅ Docker and Shell Scripts
  # - repo: https://github.com/hadolint/hadolint
  #   rev: v2.13.1-beta
  #   hooks:
  #     - id: hadolint
  #       name: Hadolint
  #       entry: hadolint
  #       language: system
  #       files: Dockerfile

  - repo: https://github.com/koalaman/shellcheck-precommit
    rev: "v0.10.0"
    hooks:
      - id: shellcheck
        entry: shellcheck
        language: system

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: "v4.0.0-alpha.8"
    hooks:
      - id: prettier
        files: \.(json|ya?ml|md|html|css)$
        args: ["--print-width", "80"]
        additional_dependencies: ["prettier@latest"]

  # - repo: local
  #   hooks:
  #     - id: docformatter
  #       name: Format docstrings with docformatter
  #       entry: docformatter
  #       language: system
  #       types: [python]
  #       args:
  #         [
  #           "--in-place",
  #           "--recursive",
  #           "--wrap-summaries",
  #           "88",
  #           "--wrap-descriptions",
  #           "88",
  #         ]
  #       files: \.py$

  # ✅ Commit Message Linting
  # - repo: https://github.com/commitizen-tools/commitizen
  #   rev: "v4.4.1"
  #   hooks:
  #     - id: commitizen
  #       name: Commitizen Conventional Commit Linter
  #       entry: cz check
  #       language: python
  #       stages: [commit-msg]

  # ✅ Run Tests
  # - repo: local
  #   hooks:
  #     - id: pytest
  #       name: Run tests before commit
  #       entry: pytest tests --maxfail=3 --disable-warnings -q
  #       language: system
  #       pass_filenames: false

  # ✅ Docstring Enforcement
  # - repo: https://github.com/PyCQA/pydocstyle
  #   rev: 6.3.0
  #   hooks:
  #     - id: pydocstyle
