[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "template_python"
dynamic = ["version"]
description = "A template for the default python project"
readme = "README.md"
requires-python = ">=3.7"
license = { text = "MIT" }
authors = [
  { name = "mark quinn", email = "mobious_99@yahoo.com" }
]
keywords = ["python", "stock", "data", "polling"]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent"
]
dependencies = [
  "requests>=2.28.0",
  "numpy>=1.21.0"
]

[project.optional-dependencies]
dev = [
  "pytest>=7.0",
  "pytest-cov>=4.0",
  "flake8>=4.0",
  "black>=22.0",
  "mypy>=1.0",
  "bandit>=1.7",
  "commitizen>=3.12",
  "mkdocs>=1.5",
  "mkdocs-material>=9.0"
]
test = [
  "pytest>=7.0",
  "pytest-cov>=4.0"
]

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["data/*.txt", "templates/*.html"]

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.ruff_cache
  | build
  | dist
)/'''

[tool.ruff]
line-length = 100
target-version = "py311"
exclude = ["tests", "build", "dist", ".venv", ".eggs"]

[tool.ruff.lint]
extend-select = ["D"]
ignore = ["D203", "D211", "D213", "D401", "D205"]

[tool.isort]
profile = "black"

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
strict = true
pretty = true
show_error_codes = true
warn_unused_ignores = true
warn_return_any = true
explicit_package_bases = true
exclude = ["^tests/"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "--strict-markers --tb=short -q"
testpaths = ["tests"]

[tool.coverage.html]
directory = "htmlcov"
show_contexts = true

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
show_missing = true
skip_covered = true

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.2.6"
tag_format = "v$version"
update_changelog_on_bump = true
changelog_file = "CHANGELOG.md"
bump_message = "chore(release): v$current_version â†’ v$new_version"
major_version_zero = true
